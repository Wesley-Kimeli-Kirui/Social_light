@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authStateProvider
@inject ILocalStorageService localStorageService

<div class="header">
<h1>Social_Light</h1>

 <div class="flex-row">
    
 </div>
 <div class="flex-row">
    <AuthorizeView>
        <Authorized>
            <button class="btn btn-danger" @onclick = "logout">Logout</button>
        </Authorized>
        <NotAuthorized>
            <button class="btn btn-primary" @onclick = "login">Login</button>
            <button class="btn btn-primary" @onclick = "register">Register</button>
        </NotAuthorized>
    </AuthorizeView>
    
 </div>
</div>
@code 
{
    // altnernative --- use a tags and href
    private void register()
    {
        navigationManager.NavigateTo("/register");
    }

    private void login()
    {
        navigationManager.NavigateTo("/login");
    }

    private async Task logout()
    {
        // remove token from local storage and notify auth state provider
        await localStorageService.RemoveItemAsync("authToken"); 
        await authStateProvider.GetAuthenticationStateAsync(); 
        navigationManager.NavigateTo("/"); // navigate to home page
    }
}